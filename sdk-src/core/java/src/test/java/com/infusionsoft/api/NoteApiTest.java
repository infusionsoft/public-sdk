/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.70.0.89421
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.api;

import com.infusionsoft.ApiException;
import com.infusionsoft.model.InfusionsoftCreateRestCustomField;
import com.infusionsoft.model.InfusionsoftCustomFieldMetaData;
import com.infusionsoft.model.InfusionsoftError;
import com.infusionsoft.model.InfusionsoftNote;
import com.infusionsoft.model.InfusionsoftNoteList;
import com.infusionsoft.model.InfusionsoftObjectModel;
import com.infusionsoft.model.InfusionsoftRequestNote;
import com.infusionsoft.model.InfusionsoftUpdateNote;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NoteApi
 */
@Ignore
public class NoteApiTest {

    private final NoteApi api = new NoteApi();

    
    /**
     * Create a Custom Field
     *
     * Adds a custom field of the specified type and options to the Note object.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNoteCustomFieldUsingPOSTTest() throws ApiException {
        InfusionsoftCreateRestCustomField customField = null;
        InfusionsoftCustomFieldMetaData response = api.createNoteCustomFieldUsingPOST(customField);

        // TODO: test validations
    }
    
    /**
     * Create a Note
     *
     * Creates a new note as the authenticated user. Either a \&quot;title\&quot; or \&quot;body\&quot; is required
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createNoteUsingPOSTTest() throws ApiException {
        InfusionsoftRequestNote createNote = null;
        InfusionsoftNote response = api.createNoteUsingPOST(createNote);

        // TODO: test validations
    }
    
    /**
     * Delete a Note
     *
     * Deletes a note
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteNoteUsingDELETETest() throws ApiException {
        Long noteId = null;
        api.deleteNoteUsingDELETE(noteId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Note
     *
     * Retrieves a single note
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getNoteUsingGETTest() throws ApiException {
        Long noteId = null;
        InfusionsoftNote response = api.getNoteUsingGET(noteId);

        // TODO: test validations
    }
    
    /**
     * List Notes
     *
     * Retrieves a list of all notes
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listNotesUsingGETTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Long userId = null;
        Long contactId = null;
        InfusionsoftNoteList response = api.listNotesUsingGET(limit, offset, userId, contactId);

        // TODO: test validations
    }
    
    /**
     * Retrieve Note Model
     *
     * Get the custom fields for the Note object
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void retrieveNoteModelUsingGETTest() throws ApiException {
        InfusionsoftObjectModel response = api.retrieveNoteModelUsingGET();

        // TODO: test validations
    }
    
    /**
     * Replace a Note
     *
     * Replaces all values of a given note
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateNoteUsingPUTTest() throws ApiException {
        Long note = null;
        InfusionsoftRequestNote requestNote = null;
        InfusionsoftNote response = api.updateNoteUsingPUT(note, requestNote);

        // TODO: test validations
    }
    
    /**
     * Update a Note
     *
     * Updates a note with only the values provided in the request
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePropertiesOnNoteUsingPATCHTest() throws ApiException {
        Long noteId = null;
        InfusionsoftUpdateNote note = null;
        InfusionsoftNote response = api.updatePropertiesOnNoteUsingPATCH(noteId, note);

        // TODO: test validations
    }
    
}
