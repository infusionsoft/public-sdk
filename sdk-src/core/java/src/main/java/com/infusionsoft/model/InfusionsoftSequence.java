/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.infusionsoft.model.InfusionsoftHistoricalCounts;
import com.infusionsoft.model.InfusionsoftSequencePath;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InfusionsoftSequence
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-16T20:44:31.010Z")
public class InfusionsoftSequence {
  @SerializedName("active_contact_count")
  private Integer activeContactCount = null;

  @SerializedName("active_contact_count_completed")
  private Integer activeContactCountCompleted = null;

  @SerializedName("historical_contact_count")
  private InfusionsoftHistoricalCounts historicalContactCount = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("paths")
  private List<InfusionsoftSequencePath> paths = null;

  public InfusionsoftSequence activeContactCount(Integer activeContactCount) {
    this.activeContactCount = activeContactCount;
    return this;
  }

   /**
   * Get activeContactCount
   * @return activeContactCount
  **/
  @ApiModelProperty(value = "")
  public Integer getActiveContactCount() {
    return activeContactCount;
  }

  public void setActiveContactCount(Integer activeContactCount) {
    this.activeContactCount = activeContactCount;
  }

  public InfusionsoftSequence activeContactCountCompleted(Integer activeContactCountCompleted) {
    this.activeContactCountCompleted = activeContactCountCompleted;
    return this;
  }

   /**
   * Get activeContactCountCompleted
   * @return activeContactCountCompleted
  **/
  @ApiModelProperty(value = "")
  public Integer getActiveContactCountCompleted() {
    return activeContactCountCompleted;
  }

  public void setActiveContactCountCompleted(Integer activeContactCountCompleted) {
    this.activeContactCountCompleted = activeContactCountCompleted;
  }

  public InfusionsoftSequence historicalContactCount(InfusionsoftHistoricalCounts historicalContactCount) {
    this.historicalContactCount = historicalContactCount;
    return this;
  }

   /**
   * Get historicalContactCount
   * @return historicalContactCount
  **/
  @ApiModelProperty(value = "")
  public InfusionsoftHistoricalCounts getHistoricalContactCount() {
    return historicalContactCount;
  }

  public void setHistoricalContactCount(InfusionsoftHistoricalCounts historicalContactCount) {
    this.historicalContactCount = historicalContactCount;
  }

  public InfusionsoftSequence id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InfusionsoftSequence name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InfusionsoftSequence paths(List<InfusionsoftSequencePath> paths) {
    this.paths = paths;
    return this;
  }

  public InfusionsoftSequence addPathsItem(InfusionsoftSequencePath pathsItem) {
    if (this.paths == null) {
      this.paths = new ArrayList<InfusionsoftSequencePath>();
    }
    this.paths.add(pathsItem);
    return this;
  }

   /**
   * Get paths
   * @return paths
  **/
  @ApiModelProperty(value = "")
  public List<InfusionsoftSequencePath> getPaths() {
    return paths;
  }

  public void setPaths(List<InfusionsoftSequencePath> paths) {
    this.paths = paths;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfusionsoftSequence sequence = (InfusionsoftSequence) o;
    return Objects.equals(this.activeContactCount, sequence.activeContactCount) &&
        Objects.equals(this.activeContactCountCompleted, sequence.activeContactCountCompleted) &&
        Objects.equals(this.historicalContactCount, sequence.historicalContactCount) &&
        Objects.equals(this.id, sequence.id) &&
        Objects.equals(this.name, sequence.name) &&
        Objects.equals(this.paths, sequence.paths);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeContactCount, activeContactCountCompleted, historicalContactCount, id, name, paths);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfusionsoftSequence {\n");
    
    sb.append("    activeContactCount: ").append(toIndentedString(activeContactCount)).append("\n");
    sb.append("    activeContactCountCompleted: ").append(toIndentedString(activeContactCountCompleted)).append("\n");
    sb.append("    historicalContactCount: ").append(toIndentedString(historicalContactCount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    paths: ").append(toIndentedString(paths)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

