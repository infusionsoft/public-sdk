/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.70.0.89421
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.infusionsoft.model.InfusionsoftAddressInformation;
import com.infusionsoft.model.InfusionsoftCreateOrderItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * InfusionsoftCreateOrder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-28T18:08:25.347Z")
public class InfusionsoftCreateOrder {
  @SerializedName("contact_id")
  private Long contactId = null;

  @SerializedName("lead_affiliate_id")
  private Long leadAffiliateId = null;

  @SerializedName("order_date")
  private OffsetDateTime orderDate = null;

  @SerializedName("order_items")
  private List<InfusionsoftCreateOrderItem> orderItems = new ArrayList<>();

  @SerializedName("order_title")
  private String orderTitle = null;

  /**
   * Gets or Sets orderType
   */
  @JsonAdapter(OrderTypeEnum.Adapter.class)
  public enum OrderTypeEnum {
    OFFLINE("Offline"),
    
    ONLINE("Online");

    private String value;

    OrderTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderTypeEnum fromValue(String text) {
      for (OrderTypeEnum b : OrderTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OrderTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OrderTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("order_type")
  private OrderTypeEnum orderType = null;

  @SerializedName("promo_codes")
  private List<String> promoCodes = null;

  @SerializedName("sales_affiliate_id")
  private Long salesAffiliateId = null;

  @SerializedName("shipping_address")
  private InfusionsoftAddressInformation shippingAddress = null;

  public InfusionsoftCreateOrder contactId(Long contactId) {
    this.contactId = contactId;
    return this;
  }

   /**
   * Get contactId
   * @return contactId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getContactId() {
    return contactId;
  }

  public void setContactId(Long contactId) {
    this.contactId = contactId;
  }

  public InfusionsoftCreateOrder leadAffiliateId(Long leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
    return this;
  }

   /**
   * Get leadAffiliateId
   * @return leadAffiliateId
  **/
  @ApiModelProperty(value = "")
  public Long getLeadAffiliateId() {
    return leadAffiliateId;
  }

  public void setLeadAffiliateId(Long leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
  }

  public InfusionsoftCreateOrder orderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
    return this;
  }

   /**
   * Get orderDate
   * @return orderDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(OffsetDateTime orderDate) {
    this.orderDate = orderDate;
  }

  public InfusionsoftCreateOrder orderItems(List<InfusionsoftCreateOrderItem> orderItems) {
    this.orderItems = orderItems;
    return this;
  }

  public InfusionsoftCreateOrder addOrderItemsItem(InfusionsoftCreateOrderItem orderItemsItem) {
    this.orderItems.add(orderItemsItem);
    return this;
  }

   /**
   * Get orderItems
   * @return orderItems
  **/
  @ApiModelProperty(required = true, value = "")
  public List<InfusionsoftCreateOrderItem> getOrderItems() {
    return orderItems;
  }

  public void setOrderItems(List<InfusionsoftCreateOrderItem> orderItems) {
    this.orderItems = orderItems;
  }

  public InfusionsoftCreateOrder orderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
    return this;
  }

   /**
   * Get orderTitle
   * @return orderTitle
  **/
  @ApiModelProperty(required = true, value = "")
  public String getOrderTitle() {
    return orderTitle;
  }

  public void setOrderTitle(String orderTitle) {
    this.orderTitle = orderTitle;
  }

  public InfusionsoftCreateOrder orderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
    return this;
  }

   /**
   * Get orderType
   * @return orderType
  **/
  @ApiModelProperty(required = true, value = "")
  public OrderTypeEnum getOrderType() {
    return orderType;
  }

  public void setOrderType(OrderTypeEnum orderType) {
    this.orderType = orderType;
  }

  public InfusionsoftCreateOrder promoCodes(List<String> promoCodes) {
    this.promoCodes = promoCodes;
    return this;
  }

  public InfusionsoftCreateOrder addPromoCodesItem(String promoCodesItem) {
    if (this.promoCodes == null) {
      this.promoCodes = new ArrayList<>();
    }
    this.promoCodes.add(promoCodesItem);
    return this;
  }

   /**
   * Uses multiple strings as promo codes. The corresponding discount will be applied to the order.
   * @return promoCodes
  **/
  @ApiModelProperty(value = "Uses multiple strings as promo codes. The corresponding discount will be applied to the order.")
  public List<String> getPromoCodes() {
    return promoCodes;
  }

  public void setPromoCodes(List<String> promoCodes) {
    this.promoCodes = promoCodes;
  }

  public InfusionsoftCreateOrder salesAffiliateId(Long salesAffiliateId) {
    this.salesAffiliateId = salesAffiliateId;
    return this;
  }

   /**
   * Get salesAffiliateId
   * @return salesAffiliateId
  **/
  @ApiModelProperty(value = "")
  public Long getSalesAffiliateId() {
    return salesAffiliateId;
  }

  public void setSalesAffiliateId(Long salesAffiliateId) {
    this.salesAffiliateId = salesAffiliateId;
  }

  public InfusionsoftCreateOrder shippingAddress(InfusionsoftAddressInformation shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @ApiModelProperty(value = "")
  public InfusionsoftAddressInformation getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(InfusionsoftAddressInformation shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfusionsoftCreateOrder createOrder = (InfusionsoftCreateOrder) o;
    return Objects.equals(this.contactId, createOrder.contactId) &&
        Objects.equals(this.leadAffiliateId, createOrder.leadAffiliateId) &&
        Objects.equals(this.orderDate, createOrder.orderDate) &&
        Objects.equals(this.orderItems, createOrder.orderItems) &&
        Objects.equals(this.orderTitle, createOrder.orderTitle) &&
        Objects.equals(this.orderType, createOrder.orderType) &&
        Objects.equals(this.promoCodes, createOrder.promoCodes) &&
        Objects.equals(this.salesAffiliateId, createOrder.salesAffiliateId) &&
        Objects.equals(this.shippingAddress, createOrder.shippingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, leadAffiliateId, orderDate, orderItems, orderTitle, orderType, promoCodes, salesAffiliateId, shippingAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfusionsoftCreateOrder {\n");
    
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    leadAffiliateId: ").append(toIndentedString(leadAffiliateId)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    orderItems: ").append(toIndentedString(orderItems)).append("\n");
    sb.append("    orderTitle: ").append(toIndentedString(orderTitle)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    promoCodes: ").append(toIndentedString(promoCodes)).append("\n");
    sb.append("    salesAffiliateId: ").append(toIndentedString(salesAffiliateId)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

