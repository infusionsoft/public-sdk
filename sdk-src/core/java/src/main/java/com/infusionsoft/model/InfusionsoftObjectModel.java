/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.infusionsoft.model.InfusionsoftCustomFieldMetaData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InfusionsoftObjectModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-16T20:40:42.950Z")
public class InfusionsoftObjectModel {
  @SerializedName("custom_fields")
  private List<InfusionsoftCustomFieldMetaData> customFields = null;

  @SerializedName("optional_properties")
  private List<String> optionalProperties = null;

  public InfusionsoftObjectModel customFields(List<InfusionsoftCustomFieldMetaData> customFields) {
    this.customFields = customFields;
    return this;
  }

  public InfusionsoftObjectModel addCustomFieldsItem(InfusionsoftCustomFieldMetaData customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<InfusionsoftCustomFieldMetaData>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @ApiModelProperty(value = "")
  public List<InfusionsoftCustomFieldMetaData> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<InfusionsoftCustomFieldMetaData> customFields) {
    this.customFields = customFields;
  }

  public InfusionsoftObjectModel optionalProperties(List<String> optionalProperties) {
    this.optionalProperties = optionalProperties;
    return this;
  }

  public InfusionsoftObjectModel addOptionalPropertiesItem(String optionalPropertiesItem) {
    if (this.optionalProperties == null) {
      this.optionalProperties = new ArrayList<String>();
    }
    this.optionalProperties.add(optionalPropertiesItem);
    return this;
  }

   /**
   * These fields are not transmitted by default on this model, but can be requested by specifying them in a comma-separated list in the optional_properties query parameter.
   * @return optionalProperties
  **/
  @ApiModelProperty(value = "These fields are not transmitted by default on this model, but can be requested by specifying them in a comma-separated list in the optional_properties query parameter.")
  public List<String> getOptionalProperties() {
    return optionalProperties;
  }

  public void setOptionalProperties(List<String> optionalProperties) {
    this.optionalProperties = optionalProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfusionsoftObjectModel objectModel = (InfusionsoftObjectModel) o;
    return Objects.equals(this.customFields, objectModel.customFields) &&
        Objects.equals(this.optionalProperties, objectModel.optionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customFields, optionalProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfusionsoftObjectModel {\n");
    
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    optionalProperties: ").append(toIndentedString(optionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

