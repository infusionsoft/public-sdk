/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * InfusionsoftCreatePayment
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-16T18:56:01.538Z")
public class InfusionsoftCreatePayment {
  @SerializedName("apply_to_commissions")
  private Boolean applyToCommissions = null;

  @SerializedName("charge_now")
  private Boolean chargeNow = null;

  @SerializedName("credit_card_id")
  private Long creditCardId = null;

  @SerializedName("date")
  private OffsetDateTime date = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("payment_amount")
  private Double paymentAmount = null;

  @SerializedName("payment_gateway_id")
  private String paymentGatewayId = null;

  /**
   * Gets or Sets paymentMethodType
   */
  @JsonAdapter(PaymentMethodTypeEnum.Adapter.class)
  public enum PaymentMethodTypeEnum {
    CREDIT_CARD("CREDIT_CARD"),
    
    CASH("CASH"),
    
    CHECK("CHECK");

    private String value;

    PaymentMethodTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentMethodTypeEnum fromValue(String text) {
      for (PaymentMethodTypeEnum b : PaymentMethodTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PaymentMethodTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentMethodTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentMethodTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentMethodTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("payment_method_type")
  private PaymentMethodTypeEnum paymentMethodType = null;

  public InfusionsoftCreatePayment applyToCommissions(Boolean applyToCommissions) {
    this.applyToCommissions = applyToCommissions;
    return this;
  }

   /**
   * Get applyToCommissions
   * @return applyToCommissions
  **/
  @ApiModelProperty(value = "")
  public Boolean isApplyToCommissions() {
    return applyToCommissions;
  }

  public void setApplyToCommissions(Boolean applyToCommissions) {
    this.applyToCommissions = applyToCommissions;
  }

  public InfusionsoftCreatePayment chargeNow(Boolean chargeNow) {
    this.chargeNow = chargeNow;
    return this;
  }

   /**
   * Get chargeNow
   * @return chargeNow
  **/
  @ApiModelProperty(value = "")
  public Boolean isChargeNow() {
    return chargeNow;
  }

  public void setChargeNow(Boolean chargeNow) {
    this.chargeNow = chargeNow;
  }

  public InfusionsoftCreatePayment creditCardId(Long creditCardId) {
    this.creditCardId = creditCardId;
    return this;
  }

   /**
   * Get creditCardId
   * @return creditCardId
  **/
  @ApiModelProperty(value = "")
  public Long getCreditCardId() {
    return creditCardId;
  }

  public void setCreditCardId(Long creditCardId) {
    this.creditCardId = creditCardId;
  }

  public InfusionsoftCreatePayment date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Used when charge_now:false or inserting historical data. ex &#x60;2017-01-01T22:17:59.039Z&#x60;
   * @return date
  **/
  @ApiModelProperty(value = "Used when charge_now:false or inserting historical data. ex `2017-01-01T22:17:59.039Z`")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public InfusionsoftCreatePayment notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @ApiModelProperty(value = "")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public InfusionsoftCreatePayment paymentAmount(Double paymentAmount) {
    this.paymentAmount = paymentAmount;
    return this;
  }

   /**
   * Get paymentAmount
   * @return paymentAmount
  **/
  @ApiModelProperty(value = "")
  public Double getPaymentAmount() {
    return paymentAmount;
  }

  public void setPaymentAmount(Double paymentAmount) {
    this.paymentAmount = paymentAmount;
  }

  public InfusionsoftCreatePayment paymentGatewayId(String paymentGatewayId) {
    this.paymentGatewayId = paymentGatewayId;
    return this;
  }

   /**
   * Get paymentGatewayId
   * @return paymentGatewayId
  **/
  @ApiModelProperty(value = "")
  public String getPaymentGatewayId() {
    return paymentGatewayId;
  }

  public void setPaymentGatewayId(String paymentGatewayId) {
    this.paymentGatewayId = paymentGatewayId;
  }

  public InfusionsoftCreatePayment paymentMethodType(PaymentMethodTypeEnum paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

   /**
   * Get paymentMethodType
   * @return paymentMethodType
  **/
  @ApiModelProperty(value = "")
  public PaymentMethodTypeEnum getPaymentMethodType() {
    return paymentMethodType;
  }

  public void setPaymentMethodType(PaymentMethodTypeEnum paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfusionsoftCreatePayment createPayment = (InfusionsoftCreatePayment) o;
    return Objects.equals(this.applyToCommissions, createPayment.applyToCommissions) &&
        Objects.equals(this.chargeNow, createPayment.chargeNow) &&
        Objects.equals(this.creditCardId, createPayment.creditCardId) &&
        Objects.equals(this.date, createPayment.date) &&
        Objects.equals(this.notes, createPayment.notes) &&
        Objects.equals(this.paymentAmount, createPayment.paymentAmount) &&
        Objects.equals(this.paymentGatewayId, createPayment.paymentGatewayId) &&
        Objects.equals(this.paymentMethodType, createPayment.paymentMethodType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyToCommissions, chargeNow, creditCardId, date, notes, paymentAmount, paymentGatewayId, paymentMethodType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfusionsoftCreatePayment {\n");
    
    sb.append("    applyToCommissions: ").append(toIndentedString(applyToCommissions)).append("\n");
    sb.append("    chargeNow: ").append(toIndentedString(chargeNow)).append("\n");
    sb.append("    creditCardId: ").append(toIndentedString(creditCardId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    paymentAmount: ").append(toIndentedString(paymentAmount)).append("\n");
    sb.append("    paymentGatewayId: ").append(toIndentedString(paymentGatewayId)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

