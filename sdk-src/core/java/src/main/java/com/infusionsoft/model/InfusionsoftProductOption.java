/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.70.0.89421
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.infusionsoft.model.InfusionsoftProductOptionValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InfusionsoftProductOption
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-28T18:08:25.347Z")
public class InfusionsoftProductOption {
  @SerializedName("allow_spaces")
  private Boolean allowSpaces = null;

  @SerializedName("can_contain_character")
  private Boolean canContainCharacter = null;

  @SerializedName("can_contain_number")
  private Boolean canContainNumber = null;

  @SerializedName("can_end_with_character")
  private Boolean canEndWithCharacter = null;

  @SerializedName("can_end_with_number")
  private Boolean canEndWithNumber = null;

  @SerializedName("can_start_with_character")
  private Boolean canStartWithCharacter = null;

  @SerializedName("can_start_with_number")
  private Boolean canStartWithNumber = null;

  @SerializedName("display_index")
  private Integer displayIndex = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("label")
  private String label = null;

  @SerializedName("max_chars")
  private Integer maxChars = null;

  @SerializedName("min_chars")
  private Integer minChars = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("required")
  private Boolean required = null;

  @SerializedName("text_message")
  private String textMessage = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FIXEDLIST("FixedList"),
    
    VARIABLE("Variable");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("values")
  private List<InfusionsoftProductOptionValue> values = null;

  public InfusionsoftProductOption allowSpaces(Boolean allowSpaces) {
    this.allowSpaces = allowSpaces;
    return this;
  }

   /**
   * Get allowSpaces
   * @return allowSpaces
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowSpaces() {
    return allowSpaces;
  }

  public void setAllowSpaces(Boolean allowSpaces) {
    this.allowSpaces = allowSpaces;
  }

  public InfusionsoftProductOption canContainCharacter(Boolean canContainCharacter) {
    this.canContainCharacter = canContainCharacter;
    return this;
  }

   /**
   * Get canContainCharacter
   * @return canContainCharacter
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanContainCharacter() {
    return canContainCharacter;
  }

  public void setCanContainCharacter(Boolean canContainCharacter) {
    this.canContainCharacter = canContainCharacter;
  }

  public InfusionsoftProductOption canContainNumber(Boolean canContainNumber) {
    this.canContainNumber = canContainNumber;
    return this;
  }

   /**
   * Get canContainNumber
   * @return canContainNumber
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanContainNumber() {
    return canContainNumber;
  }

  public void setCanContainNumber(Boolean canContainNumber) {
    this.canContainNumber = canContainNumber;
  }

  public InfusionsoftProductOption canEndWithCharacter(Boolean canEndWithCharacter) {
    this.canEndWithCharacter = canEndWithCharacter;
    return this;
  }

   /**
   * Get canEndWithCharacter
   * @return canEndWithCharacter
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanEndWithCharacter() {
    return canEndWithCharacter;
  }

  public void setCanEndWithCharacter(Boolean canEndWithCharacter) {
    this.canEndWithCharacter = canEndWithCharacter;
  }

  public InfusionsoftProductOption canEndWithNumber(Boolean canEndWithNumber) {
    this.canEndWithNumber = canEndWithNumber;
    return this;
  }

   /**
   * Get canEndWithNumber
   * @return canEndWithNumber
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanEndWithNumber() {
    return canEndWithNumber;
  }

  public void setCanEndWithNumber(Boolean canEndWithNumber) {
    this.canEndWithNumber = canEndWithNumber;
  }

  public InfusionsoftProductOption canStartWithCharacter(Boolean canStartWithCharacter) {
    this.canStartWithCharacter = canStartWithCharacter;
    return this;
  }

   /**
   * Get canStartWithCharacter
   * @return canStartWithCharacter
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanStartWithCharacter() {
    return canStartWithCharacter;
  }

  public void setCanStartWithCharacter(Boolean canStartWithCharacter) {
    this.canStartWithCharacter = canStartWithCharacter;
  }

  public InfusionsoftProductOption canStartWithNumber(Boolean canStartWithNumber) {
    this.canStartWithNumber = canStartWithNumber;
    return this;
  }

   /**
   * Get canStartWithNumber
   * @return canStartWithNumber
  **/
  @ApiModelProperty(value = "")
  public Boolean isCanStartWithNumber() {
    return canStartWithNumber;
  }

  public void setCanStartWithNumber(Boolean canStartWithNumber) {
    this.canStartWithNumber = canStartWithNumber;
  }

  public InfusionsoftProductOption displayIndex(Integer displayIndex) {
    this.displayIndex = displayIndex;
    return this;
  }

   /**
   * Get displayIndex
   * @return displayIndex
  **/
  @ApiModelProperty(value = "")
  public Integer getDisplayIndex() {
    return displayIndex;
  }

  public void setDisplayIndex(Integer displayIndex) {
    this.displayIndex = displayIndex;
  }

  public InfusionsoftProductOption id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public InfusionsoftProductOption label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public InfusionsoftProductOption maxChars(Integer maxChars) {
    this.maxChars = maxChars;
    return this;
  }

   /**
   * Get maxChars
   * @return maxChars
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxChars() {
    return maxChars;
  }

  public void setMaxChars(Integer maxChars) {
    this.maxChars = maxChars;
  }

  public InfusionsoftProductOption minChars(Integer minChars) {
    this.minChars = minChars;
    return this;
  }

   /**
   * Get minChars
   * @return minChars
  **/
  @ApiModelProperty(value = "")
  public Integer getMinChars() {
    return minChars;
  }

  public void setMinChars(Integer minChars) {
    this.minChars = minChars;
  }

  public InfusionsoftProductOption name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public InfusionsoftProductOption required(Boolean required) {
    this.required = required;
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }

  public InfusionsoftProductOption textMessage(String textMessage) {
    this.textMessage = textMessage;
    return this;
  }

   /**
   * Get textMessage
   * @return textMessage
  **/
  @ApiModelProperty(value = "")
  public String getTextMessage() {
    return textMessage;
  }

  public void setTextMessage(String textMessage) {
    this.textMessage = textMessage;
  }

  public InfusionsoftProductOption type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public InfusionsoftProductOption values(List<InfusionsoftProductOptionValue> values) {
    this.values = values;
    return this;
  }

  public InfusionsoftProductOption addValuesItem(InfusionsoftProductOptionValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Get values
   * @return values
  **/
  @ApiModelProperty(value = "")
  public List<InfusionsoftProductOptionValue> getValues() {
    return values;
  }

  public void setValues(List<InfusionsoftProductOptionValue> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfusionsoftProductOption productOption = (InfusionsoftProductOption) o;
    return Objects.equals(this.allowSpaces, productOption.allowSpaces) &&
        Objects.equals(this.canContainCharacter, productOption.canContainCharacter) &&
        Objects.equals(this.canContainNumber, productOption.canContainNumber) &&
        Objects.equals(this.canEndWithCharacter, productOption.canEndWithCharacter) &&
        Objects.equals(this.canEndWithNumber, productOption.canEndWithNumber) &&
        Objects.equals(this.canStartWithCharacter, productOption.canStartWithCharacter) &&
        Objects.equals(this.canStartWithNumber, productOption.canStartWithNumber) &&
        Objects.equals(this.displayIndex, productOption.displayIndex) &&
        Objects.equals(this.id, productOption.id) &&
        Objects.equals(this.label, productOption.label) &&
        Objects.equals(this.maxChars, productOption.maxChars) &&
        Objects.equals(this.minChars, productOption.minChars) &&
        Objects.equals(this.name, productOption.name) &&
        Objects.equals(this.required, productOption.required) &&
        Objects.equals(this.textMessage, productOption.textMessage) &&
        Objects.equals(this.type, productOption.type) &&
        Objects.equals(this.values, productOption.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowSpaces, canContainCharacter, canContainNumber, canEndWithCharacter, canEndWithNumber, canStartWithCharacter, canStartWithNumber, displayIndex, id, label, maxChars, minChars, name, required, textMessage, type, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfusionsoftProductOption {\n");
    
    sb.append("    allowSpaces: ").append(toIndentedString(allowSpaces)).append("\n");
    sb.append("    canContainCharacter: ").append(toIndentedString(canContainCharacter)).append("\n");
    sb.append("    canContainNumber: ").append(toIndentedString(canContainNumber)).append("\n");
    sb.append("    canEndWithCharacter: ").append(toIndentedString(canEndWithCharacter)).append("\n");
    sb.append("    canEndWithNumber: ").append(toIndentedString(canEndWithNumber)).append("\n");
    sb.append("    canStartWithCharacter: ").append(toIndentedString(canStartWithCharacter)).append("\n");
    sb.append("    canStartWithNumber: ").append(toIndentedString(canStartWithNumber)).append("\n");
    sb.append("    displayIndex: ").append(toIndentedString(displayIndex)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    maxChars: ").append(toIndentedString(maxChars)).append("\n");
    sb.append("    minChars: ").append(toIndentedString(minChars)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    textMessage: ").append(toIndentedString(textMessage)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

