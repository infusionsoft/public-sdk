/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InfusionsoftFileUpload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-10-16T18:56:01.538Z")
public class InfusionsoftFileUpload {
  @SerializedName("file_name")
  private String fileName = null;

  @SerializedName("file_data")
  private String fileData = null;

  @SerializedName("contact_id")
  private Long contactId = null;

  @SerializedName("is_public")
  private Boolean isPublic = null;

  /**
   * Gets or Sets fileAssociation
   */
  @JsonAdapter(FileAssociationEnum.Adapter.class)
  public enum FileAssociationEnum {
    CONTACT("CONTACT"),
    
    USER("USER"),
    
    COMPANY("COMPANY");

    private String value;

    FileAssociationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FileAssociationEnum fromValue(String text) {
      for (FileAssociationEnum b : FileAssociationEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<FileAssociationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FileAssociationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FileAssociationEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return FileAssociationEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("file_association")
  private FileAssociationEnum fileAssociation = null;

  public InfusionsoftFileUpload fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * Get fileName
   * @return fileName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public InfusionsoftFileUpload fileData(String fileData) {
    this.fileData = fileData;
    return this;
  }

   /**
   * Get fileData
   * @return fileData
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFileData() {
    return fileData;
  }

  public void setFileData(String fileData) {
    this.fileData = fileData;
  }

  public InfusionsoftFileUpload contactId(Long contactId) {
    this.contactId = contactId;
    return this;
  }

   /**
   * Get contactId
   * @return contactId
  **/
  @ApiModelProperty(required = true, value = "")
  public Long getContactId() {
    return contactId;
  }

  public void setContactId(Long contactId) {
    this.contactId = contactId;
  }

  public InfusionsoftFileUpload isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Get isPublic
   * @return isPublic
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }

  public InfusionsoftFileUpload fileAssociation(FileAssociationEnum fileAssociation) {
    this.fileAssociation = fileAssociation;
    return this;
  }

   /**
   * Get fileAssociation
   * @return fileAssociation
  **/
  @ApiModelProperty(required = true, value = "")
  public FileAssociationEnum getFileAssociation() {
    return fileAssociation;
  }

  public void setFileAssociation(FileAssociationEnum fileAssociation) {
    this.fileAssociation = fileAssociation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfusionsoftFileUpload fileUpload = (InfusionsoftFileUpload) o;
    return Objects.equals(this.fileName, fileUpload.fileName) &&
        Objects.equals(this.fileData, fileUpload.fileData) &&
        Objects.equals(this.contactId, fileUpload.contactId) &&
        Objects.equals(this.isPublic, fileUpload.isPublic) &&
        Objects.equals(this.fileAssociation, fileUpload.fileAssociation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileName, fileData, contactId, isPublic, fileAssociation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfusionsoftFileUpload {\n");
    
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    fileData: ").append(toIndentedString(fileData)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("    fileAssociation: ").append(toIndentedString(fileAssociation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

