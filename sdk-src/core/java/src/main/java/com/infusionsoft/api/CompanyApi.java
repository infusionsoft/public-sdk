/*
 * Infusionsoft REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.70.0.89421
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.infusionsoft.api;

import com.infusionsoft.ApiCallback;
import com.infusionsoft.ApiClient;
import com.infusionsoft.ApiException;
import com.infusionsoft.ApiResponse;
import com.infusionsoft.Configuration;
import com.infusionsoft.Pair;
import com.infusionsoft.ProgressRequestBody;
import com.infusionsoft.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.infusionsoft.model.InfusionsoftCompany;
import com.infusionsoft.model.InfusionsoftCompanyList;
import com.infusionsoft.model.InfusionsoftCreateOrPatchCompany;
import com.infusionsoft.model.InfusionsoftError;
import com.infusionsoft.model.InfusionsoftObjectModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CompanyApi {
    private ApiClient apiClient;

    public CompanyApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CompanyApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for createCompanyUsingPOST
     * @param company company (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call createCompanyUsingPOSTCall(InfusionsoftCreateOrPatchCompany company, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = company;

        // create path and map variables
        String localVarPath = "/companies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call createCompanyUsingPOSTValidateBeforeCall(InfusionsoftCreateOrPatchCompany company, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = createCompanyUsingPOSTCall(company, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Create a Company
     * Creates a new company as the authenticated user. NB: Company must contain at least the company name. The &#x60;country_code&#x60; is required if &#x60;region&#x60; is specified.  You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \&quot;Customer opted-in through webform\&quot;, \&quot;Company gave explicit permission.\&quot;  &#x60;&#x60;&#x60;json \&quot;opt_in_reason\&quot;: \&quot;your reason for opt-in\&quot; &#x60;&#x60;&#x60;
     * @param company company (optional)
     * @return InfusionsoftCompany
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InfusionsoftCompany createCompanyUsingPOST(InfusionsoftCreateOrPatchCompany company) throws ApiException {
        ApiResponse<InfusionsoftCompany> resp = createCompanyUsingPOSTWithHttpInfo(company);
        return resp.getData();
    }

    /**
     * Create a Company
     * Creates a new company as the authenticated user. NB: Company must contain at least the company name. The &#x60;country_code&#x60; is required if &#x60;region&#x60; is specified.  You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \&quot;Customer opted-in through webform\&quot;, \&quot;Company gave explicit permission.\&quot;  &#x60;&#x60;&#x60;json \&quot;opt_in_reason\&quot;: \&quot;your reason for opt-in\&quot; &#x60;&#x60;&#x60;
     * @param company company (optional)
     * @return ApiResponse&lt;InfusionsoftCompany&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InfusionsoftCompany> createCompanyUsingPOSTWithHttpInfo(InfusionsoftCreateOrPatchCompany company) throws ApiException {
        com.squareup.okhttp.Call call = createCompanyUsingPOSTValidateBeforeCall(company, null, null);
        Type localVarReturnType = new TypeToken<InfusionsoftCompany>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Create a Company (asynchronously)
     * Creates a new company as the authenticated user. NB: Company must contain at least the company name. The &#x60;country_code&#x60; is required if &#x60;region&#x60; is specified.  You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \&quot;Customer opted-in through webform\&quot;, \&quot;Company gave explicit permission.\&quot;  &#x60;&#x60;&#x60;json \&quot;opt_in_reason\&quot;: \&quot;your reason for opt-in\&quot; &#x60;&#x60;&#x60;
     * @param company company (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call createCompanyUsingPOSTAsync(InfusionsoftCreateOrPatchCompany company, final ApiCallback<InfusionsoftCompany> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = createCompanyUsingPOSTValidateBeforeCall(company, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InfusionsoftCompany>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for listCompaniesUsingGET
     * @param limit Sets a total of items to return (optional)
     * @param offset Sets a beginning range of items to return (optional)
     * @param companyName Optional company name to query on (optional)
     * @param order Attribute to order items by (optional)
     * @param orderDirection How to order the data i.e. ascending (A-Z) or descending (Z-A) (optional)
     * @param optionalProperties Comma-delimited list of Company properties to include in the response. (Fields such as &#x60;notes&#x60;, &#x60;fax_number&#x60; and &#x60;custom_fields&#x60; aren&#39;t included, by default.) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call listCompaniesUsingGETCall(Integer limit, Integer offset, String companyName, String order, String orderDirection, List<String> optionalProperties, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/companies";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (limit != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("limit", limit));
        if (offset != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("offset", offset));
        if (companyName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("company_name", companyName));
        if (order != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("order", order));
        if (orderDirection != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("order_direction", orderDirection));
        if (optionalProperties != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "optional_properties", optionalProperties));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call listCompaniesUsingGETValidateBeforeCall(Integer limit, Integer offset, String companyName, String order, String orderDirection, List<String> optionalProperties, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = listCompaniesUsingGETCall(limit, offset, companyName, order, orderDirection, optionalProperties, progressListener, progressRequestListener);
        return call;

    }

    /**
     * List Companies
     * Retrieves a list of all companies
     * @param limit Sets a total of items to return (optional)
     * @param offset Sets a beginning range of items to return (optional)
     * @param companyName Optional company name to query on (optional)
     * @param order Attribute to order items by (optional)
     * @param orderDirection How to order the data i.e. ascending (A-Z) or descending (Z-A) (optional)
     * @param optionalProperties Comma-delimited list of Company properties to include in the response. (Fields such as &#x60;notes&#x60;, &#x60;fax_number&#x60; and &#x60;custom_fields&#x60; aren&#39;t included, by default.) (optional)
     * @return InfusionsoftCompanyList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InfusionsoftCompanyList listCompaniesUsingGET(Integer limit, Integer offset, String companyName, String order, String orderDirection, List<String> optionalProperties) throws ApiException {
        ApiResponse<InfusionsoftCompanyList> resp = listCompaniesUsingGETWithHttpInfo(limit, offset, companyName, order, orderDirection, optionalProperties);
        return resp.getData();
    }

    /**
     * List Companies
     * Retrieves a list of all companies
     * @param limit Sets a total of items to return (optional)
     * @param offset Sets a beginning range of items to return (optional)
     * @param companyName Optional company name to query on (optional)
     * @param order Attribute to order items by (optional)
     * @param orderDirection How to order the data i.e. ascending (A-Z) or descending (Z-A) (optional)
     * @param optionalProperties Comma-delimited list of Company properties to include in the response. (Fields such as &#x60;notes&#x60;, &#x60;fax_number&#x60; and &#x60;custom_fields&#x60; aren&#39;t included, by default.) (optional)
     * @return ApiResponse&lt;InfusionsoftCompanyList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InfusionsoftCompanyList> listCompaniesUsingGETWithHttpInfo(Integer limit, Integer offset, String companyName, String order, String orderDirection, List<String> optionalProperties) throws ApiException {
        com.squareup.okhttp.Call call = listCompaniesUsingGETValidateBeforeCall(limit, offset, companyName, order, orderDirection, optionalProperties, null, null);
        Type localVarReturnType = new TypeToken<InfusionsoftCompanyList>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * List Companies (asynchronously)
     * Retrieves a list of all companies
     * @param limit Sets a total of items to return (optional)
     * @param offset Sets a beginning range of items to return (optional)
     * @param companyName Optional company name to query on (optional)
     * @param order Attribute to order items by (optional)
     * @param orderDirection How to order the data i.e. ascending (A-Z) or descending (Z-A) (optional)
     * @param optionalProperties Comma-delimited list of Company properties to include in the response. (Fields such as &#x60;notes&#x60;, &#x60;fax_number&#x60; and &#x60;custom_fields&#x60; aren&#39;t included, by default.) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call listCompaniesUsingGETAsync(Integer limit, Integer offset, String companyName, String order, String orderDirection, List<String> optionalProperties, final ApiCallback<InfusionsoftCompanyList> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = listCompaniesUsingGETValidateBeforeCall(limit, offset, companyName, order, orderDirection, optionalProperties, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InfusionsoftCompanyList>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for retrieveCompanyModelUsingGET
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call retrieveCompanyModelUsingGETCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/companies/model";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call retrieveCompanyModelUsingGETValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = retrieveCompanyModelUsingGETCall(progressListener, progressRequestListener);
        return call;

    }

    /**
     * Retrieve Company Model
     * Get the custom fields and optional properties for the Company object
     * @return InfusionsoftObjectModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InfusionsoftObjectModel retrieveCompanyModelUsingGET() throws ApiException {
        ApiResponse<InfusionsoftObjectModel> resp = retrieveCompanyModelUsingGETWithHttpInfo();
        return resp.getData();
    }

    /**
     * Retrieve Company Model
     * Get the custom fields and optional properties for the Company object
     * @return ApiResponse&lt;InfusionsoftObjectModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InfusionsoftObjectModel> retrieveCompanyModelUsingGETWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = retrieveCompanyModelUsingGETValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<InfusionsoftObjectModel>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve Company Model (asynchronously)
     * Get the custom fields and optional properties for the Company object
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call retrieveCompanyModelUsingGETAsync(final ApiCallback<InfusionsoftObjectModel> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = retrieveCompanyModelUsingGETValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InfusionsoftObjectModel>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for updatePropertiesOnContactUsingPATCH
     * @param companyId companyId (required)
     * @param company company (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call updatePropertiesOnContactUsingPATCHCall(Long companyId, InfusionsoftCreateOrPatchCompany company, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = company;

        // create path and map variables
        String localVarPath = "/company/{companyId}"
            .replaceAll("\\{" + "companyId" + "\\}", apiClient.escapeString(companyId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call updatePropertiesOnContactUsingPATCHValidateBeforeCall(Long companyId, InfusionsoftCreateOrPatchCompany company, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'companyId' is set
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId' when calling updatePropertiesOnContactUsingPATCH(Async)");
        }
        

        com.squareup.okhttp.Call call = updatePropertiesOnContactUsingPATCHCall(companyId, company, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Update a Company
     * Updates a company with only the values provided in the request.  You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \&quot;Customer opted-in through webform\&quot;, \&quot;Company gave explicit permission.\&quot;  &#x60;&#x60;&#x60;json \&quot;opt_in_reason\&quot;: \&quot;your reason for opt-in\&quot; &#x60;&#x60;&#x60;
     * @param companyId companyId (required)
     * @param company company (optional)
     * @return InfusionsoftCompany
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InfusionsoftCompany updatePropertiesOnContactUsingPATCH(Long companyId, InfusionsoftCreateOrPatchCompany company) throws ApiException {
        ApiResponse<InfusionsoftCompany> resp = updatePropertiesOnContactUsingPATCHWithHttpInfo(companyId, company);
        return resp.getData();
    }

    /**
     * Update a Company
     * Updates a company with only the values provided in the request.  You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \&quot;Customer opted-in through webform\&quot;, \&quot;Company gave explicit permission.\&quot;  &#x60;&#x60;&#x60;json \&quot;opt_in_reason\&quot;: \&quot;your reason for opt-in\&quot; &#x60;&#x60;&#x60;
     * @param companyId companyId (required)
     * @param company company (optional)
     * @return ApiResponse&lt;InfusionsoftCompany&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InfusionsoftCompany> updatePropertiesOnContactUsingPATCHWithHttpInfo(Long companyId, InfusionsoftCreateOrPatchCompany company) throws ApiException {
        com.squareup.okhttp.Call call = updatePropertiesOnContactUsingPATCHValidateBeforeCall(companyId, company, null, null);
        Type localVarReturnType = new TypeToken<InfusionsoftCompany>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Update a Company (asynchronously)
     * Updates a company with only the values provided in the request.  You may opt-in or mark a Company as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \&quot;Customer opted-in through webform\&quot;, \&quot;Company gave explicit permission.\&quot;  &#x60;&#x60;&#x60;json \&quot;opt_in_reason\&quot;: \&quot;your reason for opt-in\&quot; &#x60;&#x60;&#x60;
     * @param companyId companyId (required)
     * @param company company (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call updatePropertiesOnContactUsingPATCHAsync(Long companyId, InfusionsoftCreateOrPatchCompany company, final ApiCallback<InfusionsoftCompany> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = updatePropertiesOnContactUsingPATCHValidateBeforeCall(companyId, company, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InfusionsoftCompany>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
